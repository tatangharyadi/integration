---
    name: CI/CD GCP Cloud Run
    on:
      push:
        branches:
            - main
        paths:
            - 'loyalty/**'
      workflow_dispatch:
    
    env:
      CONTEXT: './loyalty'
      SERVICE_TEMPLATE: './loyalty/service.template.yaml'
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      GAR_LOCATION: ${{ vars.GAR_LOCATION }}
      REPOSITORY: ${{ vars.REPOSITORY }}
      SERVICE: ${{ vars.SERVICE }}
      REGION: ${{ vars.REGION }}
    
    jobs:
      deploy:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            include:
              - dockerfile: 'loyalty/Dockerfile'

        steps:
        - name: Checkout
          uses: actions/checkout@v4
    
        - name: Google Auth
          id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
        - name: Docker Auth
          id: docker-auth
          uses: docker/login-action@v3
          with:
            registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
            username: _json_key
            password: ${{ secrets.GCP_CREDENTIALS }}
    
        - name: Build and Push Image
          id: build-image
          uses: docker/build-push-action@v6
          with:
            context: ${{ env.CONTEXT }}
            file: ${{ matrix.dockerfile }}
            push: true
            tags: |
              ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
        
        - name: Setup env
          id: secrets
          uses: google-github-actions/get-secretmanager-secrets@v2
          with:
            secrets: |-
              token01:projects/238488984298/secrets/voucherify-id
              token02:projects/238488984298/secrets/voucherify-secret-key

        - name: Create Service Declaration
          run: |-
            export IMAGE="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
            export SERVICE="${{ env.SERVICE }}"
            export TOKEN01= ${{ steps.secrets.outputs.token01 }}
            export TOKEN02= ${{ steps.secrets.outputs.token02 }}
            envsubst < ${{ env.SERVICE_TEMPLATE }} > service.yaml

        - name: Deploy to Cloud run
          id: deploy
          uses: google-github-actions/deploy-cloudrun@v2
          with:
            service: ${{ env.SERVICE }}
            region: ${{ env.REGION }}
            metadata: service.yaml
    
        - name: Show Output
          run: echo ${{ steps.deploy.outputs.url }}                  