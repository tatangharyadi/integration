---
swagger: "2.0"
info:
  title: "integration - OpenAPI"
  description:
    "This is the OpenAPI specification for tatangharyadi/integration (https://github.com/tatangharyadi/integration).\
    \ An `apiKey` will be needed for authorization"
  version: "1.0.0"
schemes:
  - "https"
security: []
tags:
  - name: "auth"
    description: "Auth"
  - name: "auth0"
    description: "Auth0"
  - name: "erp"
    description: "ERP"
  - name: "odoo"
    description: "Odoo"
  - name: "database"
    description: "Database"
  - name: "yummyos"
    description: "YummyOS"
  - name: "loyalty"
    description: "Loyalty"
  - name: "voucherify"
    description: "Voucherify"
  - name: "payment"
    description: "Payment"
  - name: "xendit"
    description: "Xendit"

paths:
  /hello/auth:
    get:
      tags:
        - "auth"
      summary: "Hello World"
      operationId: "helloAuth"
      x-google-backend:
        address: https://integration-auth-238488984298.asia-southeast2.run.app
        path_translation: CONSTANT_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello, World!"
  /hello/erp:
    get:
      tags:
        - "erp"
      summary: "Hello World"
      operationId: "helloErp"
      x-google-backend:
        address: https://integration-erp-238488984298.asia-southeast2.run.app
        path_translation: CONSTANT_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello, World!"
  /hello/database:
    get:
      tags:
        - "database"
      summary: "Hello World"
      operationId: "helloDatabase"
      x-google-backend:
        address: https://integration-database-238488984298.asia-southeast2.run.app
        path_translation: CONSTANT_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello, World!"
  /hello/loyalty:
    get:
      tags:
        - "loyalty"
      summary: "Hello World"
      operationId: "helloLoyalty"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: CONSTANT_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello, World!"
  /hello/payment:
    get:
      tags:
        - "payment"
      summary: "Hello World"
      operationId: "helloPayment"
      x-google-backend:
        address: https://integration-payment-238488984298.asia-southeast2.run.app
        path_translation: CONSTANT_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "string"
            example: "Hello, World!"

  /auth0/gettoken:
    post:
      tags:
        - "auth0"
      summary: "generate a token"
      operationId: "generateToken"
      x-google-backend:
        address: https://integration-auth-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Client object"
          required: true
          schema:
            $ref: "#/definitions/Client"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Token"
        401:
          description: "Unauthorized"
          
          
  /odoo/getproductids:
    post:
      tags:
        - "odoo"
      summary: "Get one or more product IDs"
      operationId: "getProductId"
      x-google-backend:
        address: https://integration-erp-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Date range object"
          required: true
          schema:
            $ref: "#/definitions/DateRange"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductId"
        404:
          description: "Product IDs not found"
  /odoo/getproduct/{id}:
    get:
      tags:
        - "odoo"
      summary: "Get a product"
      operationId: "getProduct"
      x-google-backend:
        address: https://integration-erp-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of product to return"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        404:
          description: "Product not found"
          
  /yummyos/getplaceproducts/{id}:
    get:
      tags:
        - "yummyos"
      summary: "Get products by place ID"
      operationId: "getPlaceProducts"
      x-google-backend:
        address: https://integration-database-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of place to return its products"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        404:
          description: "Product not found"
          
  /xendit/createqrpayment:
    post:
      tags:
        - "xendit"
      summary: "Create a QR Payment to Xendit"
      operationId: "createQrPayment"
      x-google-backend:
        address: https://integration-payment-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "QR Payment object"
          required: true
          schema:
            $ref: "#/definitions/QrPayment"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/QrPayment"
        404:
          description: "Create QR Payment failed"
  /xendit/callbackqrpayment:
    post:
      tags:
        - "xendit"
      summary: "Callback for Xendit to send QR Payment status"
      operationId: "callbackQrPayment"
      x-google-backend:
        address: https://integration-payment-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "x-callback-token"
          in: "header"
          description: "Xendit webhook token"
          required: true
          type: "string"
        - name: "webhook-id"
          in: "header"
          description: "callback unique identifier for a specific payment"
          type: "string"
        - name: "body"
          in: "body"
          description: "QR Payment object"
          required: true
          schema:
            $ref: "#/definitions/XenditQrPayment"
      responses:
        200:
          description: "successful operation"
        404:
          description: "Callback QR Payment failed"

  /voucherify/getcustomer/{id}:
    get:
      tags:
        - "voucherify"
      summary: "Get a customer"
      operationId: "getCustomer"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Id of customer to return"
          required: true
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Customer"
        404:
          description: "Customer not found"
  /voucherify/importcustomers:
    post:
      tags:
        - "voucherify"
      summary: "Import customers"
      operationId: "importCustomers"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Customer objects"
          required: true
          schema:
            $ref: "#/definitions/Customers"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
  /voucherify/redeem:
    post:
      tags:
        - "voucherify"
      summary: "Redeem voucher"
      operationId: "redeemVoucher"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Redeem object"
          required: true
          schema:
            $ref: "#/definitions/Redeem"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Redemption"
      
  /voucherify/creditcustomer/{id}:
    post:
      tags:
        - "voucherify"
      summary: "Credit customer"
      operationId: "creditCustomer"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Id of customer to credit"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "DebitCredit objects"
          required: true
          schema:
            $ref: "#/definitions/DebitCredit"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
  /voucherify/debitcustomer/{id}:
    post:
      tags:
        - "voucherify"
      summary: "Debit customer"
      operationId: "debitCustomer"
      x-google-backend:
        address: https://integration-loyalty-238488984298.asia-southeast2.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      security:
        - api_key: []
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "Id of customer to debit"
          required: true
          type: "string"
        - name: "body"
          in: "body"
          description: "DebitCredit objects"
          required: true
          schema:
            $ref: "#/definitions/DebitCredit"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"          
  

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "key"
    in: "query"
  oauth2:
    authorizationUrl: "https://yummycorp.jp.auth0.com/"
    flow: "implicit"
    type: "oauth2"
    x-google-issuer: "https://yummycorp.jp.auth0.com/"
    x-google-jwks_uri: "https://yummycorp.jp.auth0.com/.well-known/jwks.json"
    x-google-audiences: "https://yummyos.yummycorp.com/"

definitions:

  Client:
    type: "object"
    required:
      - "client_id"
      - "client_secret"
    properties:
      client_id:
        type: "string"
      client_secret:
        type: "string"
      audience:
        type: "string"
        example: "pos-api"
      grant_type:
        type: "string"
        example: "client_credentials"
  Token:
    type: "object"
    required:
      - "access_token"
    properties:
      access_token:
        type: "string"
      scope:
        type: "string"
        example: "read:customer"
      expires_in:
        type: "integer"
        format: "int32"
      token_type:
        type: "string"
        example: "Bearer"
        
  DateRange:
    type: "object"
    required:
      - "fromDate"
      - "toDate"
    properties:
      fromDate:
        type: "string"
        format: "date-time"
      toDate:
        type: "string"
        format: "date-time"
        
  ProductId:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
      update_timestamp:
        type: "string"
        format: "date-time"
  Product:
    type: "object"
    required:
      - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 14236,
      sku:
        type: "string"
        example: "BAKE00008351"
      barcode:
        type: "string"
        example: "BAKE00008351"
      name:
        type: "string"
        example: "Agar-Agar Serbuk White, Swallow Globe, 12 pcs"
      description:
        type: "string"
      cost:
        type: "number"
        format: "float"
      price:
        type: "number"
        format: "float"
      prices:
        type: "array"
        items: 
          $ref: "#/definitions/Price"
      modifier_collection:
        type: "array"
        items:
          $ref: "#/definitions/ModifierCollection"
      availability:
        type: "string"
        example: "IN_STOCK"
      update_timestamp:
        type: "string"
        format: "date-time"
      parent:
        $ref: "#/definitions/ParentProduct"
  ParentProduct:
    type: "object"
    required:
      - "id"
    properties:
      id:
        type: "integer"
        format: "int64"
        example: 14236,
      sku:
        type: "string"
        example: "BAKE00008351"
      name:
        type: "string"
        example: "Agar-Agar Serbuk White, Swallow Globe, 12 pcs"
      description:
        type: "string"
      cost:
        type: "number"
        format: "float"
  ModifierCollection:
    type: "object"
    properties:
      name:
        type: "string"
      selection_min:
        type: "integer"
        format: "int64"
      selection_max:
        type: "integer"
        format: "int64"
      modifiers:
        type: "array"
        items:
          $ref: "#/definitions/Modifier"
  Modifier:
    type: "object"
    properties:
      sku:
        type: "string"
      name:
        type: "string"
      prices:
        type: "array"
        items:
          $ref: "#/definitions/Price"
  Price:
    type: "object"
    properties:
      price:
        type: "number"
        format: "float"
      currency_code:
        type: "string"
        example: "IDR"
      price_effective_time:
        type: "string"
        format: "date-time"
      price_expiry_time:
        type: "string"
        format: "date-time"


  Customers:
    type: "object"
    properties:
      customers:
        type: "array"
        items:
          $ref: "#/definitions/Customer"
  Customer:
    type: "object"
    required:
      - "id"
    properties:
      id:
        type: "string"
        example: "GPAS-123"
      employee_id:
        type: "string"
        example: "123"
      name:
        type: "string"
        example: "name"
      email:
        type: "string"
        example: "email@email.com"  
      phone:
        type: "string"
        example: "+62123"
      meal_benefit:
        $ref: "#/definitions/Credit"
      credit_benefit:
        $ref: "#/definitions/Credit"
      personal_credit:
        $ref: "#/definitions/Credit"
      vouchers:
        type: "array"
        items:
          $ref: "#/definitions/Voucher"
  Credit:
    type: "object"
    properties:
      cycle:
        type: "string"
        example: "DD"
      limit:
        type: "number"
        format: "float"
      balance:
        type: "number"
        format: "float"
      transaction_timestamp:
        type: "string"
        format: "date-time"
  DebitCredit:
    type: "object"
    properties:
      type:
        type: "string"
        example: "CREDITBENEFIT"
      amount:
        type: "number"
        format: "float"
  Voucher:
    type: "object"
    required:
      - "code"
    properties:
      code:
        type: "string"
        example: "GPAS-123-MEAL"
      category:
        type: "string"
        example: "MEAL_BENEFIT"
      type:
        type: "string"
        example: "DISCOUNT_VOUCHER"
      discount:
        $ref: "#/definitions/VoucherDiscount"
      active:
        type: "boolean"
  VoucherDiscount:
    type: "object"
    properties:
      type: 
        type: "string"
        example: "PERCENT"
      perent_off:
        type: "integer"
        format: "int64"

  Order:
    type: "object"
    properties:
      id:
        type: "string"
        example: "ORDER-123"
      amount:
        type: "number"
        format: "float"
      discount:
        type: "number"
        format: "float"

  Redeem:
    type: "object"
    properties:
      redeemables:
        type: array
        items:
          $ref: "#/definitions/Redeemable"
      order:
        $ref: "#/definitions/Order"
      customer:
        $ref: "#/definitions/Customer"
  Redeemable:
    type: "object"
    properties:
      object:
        type: "string"
        example: "voucher"
      id:
        type: "string"
        example: "GPAS-123-MEAL"
  Redemption:
    type: "object"
    properties:
      voucher:
        $ref: "#/definitions/Voucher"
      order:
        $ref: "#/definitions/Order"
      status:
        type: "string"
        example: "SUCCEEDED"
        
  QrPayment:
    type: "object"
    properties:
      reference_id:
        type: "string"
        example: "order-id-1666420204"
      type:
        type: "string"
        example: "DYNAMIC"
      currency:
        type: "string"
        example: "IDR"
      amount:
        type: "number"
        format: "float"
      qr_string:
        type: "string"
        example: "0002010102##########CO.XENDIT.WWW011893600#######14220002152#####414220010303TTT####015CO.XENDIT.WWW02180000000000000000000TTT52045######ID5911XenditQRIS6007Jakarta6105121606##########3k1mOnF73h11111111#3k1mOnF73h6v53033605401163040BDB"
      status:
        type: "string"
        example: "ACTIVE"
      metadata:
        $ref: "#/definitions/PaymentMetadata"
  PaymentMetadata:
    type: "object"
    properties:
      token:
        type: "string"
        
  XenditQrPayment:
    type: "object"
    properties:
      event:
        type: "string"
        example: "qr.payment"
      api_version:
        type: "string"
        example: "2022-07-31"
      business_id:
        type: "string"
        example: "58cd618ba0464eb64acdb246"
      created:
        type: "string"
        format: "date-time"
      data:
        $ref: "#/definitions/XenditData"
  XenditData:
    type: "object"
    properties:
      id:
        type: "string"
        example: "qrpy_8182837te-87st-49ing-8696-1239bd4d759c"
      business_id:
        type: "string"
        example: "58cd618ba0464eb64acdb246"
      currency:
        type: "string"
        example: "IDR"
      amount:
        type: "number"
        format: "float"
      status:
        type: "string"
        example: "SUCCEEDED"
      created:
        type: "string"
        format: "date-time"
      qr_id:
        type: "string"
        example: "qr_61cb3576-3a25-4d35-8d15-0e8e3bdba4f2"
      qr_string:
        type: "string"
        example: "0002010102##########CO.XENDIT.WWW011893600#######14220002152#####414220010303TTT####015CO.XENDIT.WWW02180000000000000000000TTT52045######ID5911XenditQRIS6007Jakarta6105121606##########3k1mOnF73h11111111#3k1mOnF73h6v53033605401163040BDB"
      reference_id:
        type: "string"
        example: "order-id-1666420204"
      type:
        type: "string"
        example: "DYNAMIC"
      channel_code:
        type: "string"
        example: "ID_DANA"
      expires_at:
        type: "string"
        format: "date-time"
      basket:
        type: "array"
        items:
          $ref: "#/definitions/XenditBasket"
      metadata:
        $ref: "#/definitions/PaymentMetadata"
      payment_detail:
        $ref: "#/definitions/XenditPaymentDetail"
  XenditBasket:
    type: "object"
    properties:
      reference_id:
        type: "string"
      name:
        type: "string"
      category:
        type: "string"
      currency:
        type: "string"
        example: "IDR"
      price:
        type: "number"
        format: "float"
      quantity:
        type: "integer"
        format: "int64"
      type:
        type: "string"
        example: "PRODUCT"
      url:
        type: "string"
      description:
        type: "string"
      sub_category:
        type: "string"
  XenditPaymentDetail:
    type: "object"
    properties:
      receipt_id:
        type: "string"
        example: "000111666"
      source:
        type: "string"
        example: "GOPAY"
      name:
        type: "string"
      account_details:
        type: "string"
